install.packages("randomForest")
library("MASS")
library("MASS")
help(Cars93)
head(Cars93)
Cars93$Type
table(Cars93$AirBags)
nrow(Cars93)
ncol(Cars93)
colors()[1:40]
palette()
??Cars93
Cars93$weight
stem(Cars93$weight)
install.packages("randomForest")
??Cars93
stem(Cars93$weight)
help(Cars93)
head(Cars93) # shows first 6 rows
Cars93$Type
table(Cars93$AirBags)
nrow(Cars93)
ncol(Cars93)
barplot(table(Cars93$AirBags), ylab="Frequency", cex.lab=1.3)
colors()[1:40]
palette() # can change the default if you'd like
??Cars93
stem(Cars93$weight)
help(Cars93)
install.packages("randomForest")
library("MASS")
help(Cars93)
head(Cars93) # shows first 6 rows
Cars93$Type
table(Cars93$AirBags)
nrow(Cars93)
ncol(Cars93)
barplot(table(Cars93$AirBags), ylab="Frequency", cex.lab=1.3)
colors()[1:40]
palette() # can change the default if you'd like
??Cars93
stem(Cars93$weight)
stem(Cars93$weight)
install.packages("randomForest")
library("MASS")
stem(Cars93$weight)
stripchart(Cars93$MPG.city,method="stack",pch=16, + cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stem(Cars93$weight)
install.packages("randomForest")
library("MASS")
help(Cars93)
head(Cars93) # shows first 6 rows
Cars93$Type
table(Cars93$AirBags)
nrow(Cars93)
ncol(Cars93)
barplot(table(Cars93$AirBags), ylab="Frequency", cex.lab=1.3)
colors()[1:40]
palette() # can change the default if you'd like
stem(Cars93$weight)
stem(Cars93$weight)
install.packages("randomForest")
library("MASS")
stem(Cars93$weight)
library(randomForest)
stem(Cars93$weight)
numeric()
stem(Cars93$weight)
install.packages("randomForest")
install.packages("randomForest")
library("MASS")
help(Cars93)
head(Cars93) # shows first 6 rows
Cars93$Type
table(Cars93$AirBags)
nrow(Cars93)
ncol(Cars93)
barplot(table(Cars93$AirBags), ylab="Frequency", cex.lab=1.3)
colors()[1:40]
palette() # can change the default if you'd like
stem(Cars93$weight)
stripchart(Cars93$MPG.city,method="stack",pch=16, + cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stem(Cars93$weight)
stem(Cars93$weight)
install.packages("randomForest")
library("MASS")
help(Cars93)
stem(Cars93$weight)
hist(Particulate,cex.lab=1.2,cex.axis=1.2,col="lightgray",breaks=seq(0,7,.5), + xlab="Particulate (g/gal)")
box()
barplot(table(Cars93$AirBags), ylab="Frequency", cex.lab=1.3)
stem(Cars93$AirBags)
install.packages("randomForest")
library("MASS")
stripchart(Cars93$MPG.city,method="stack",pch=16, + cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stem(Cars93$weight)
stem(weight)
stem(Cars93)
stem(Cars93$weight)
install.packages("randomForest")
library("MASS")
help(Cars93)
head(Cars93) # shows first 6 rows
stem(Cars93$Weight)
ls(Cars93)
---
title: "HW 1"
---
title: "HW 1"
function_name <- function(parameters){
#Do something here
}
function_name
read_excel("particulate data.xlsx") # Always keep in mind file extensions excel = .xlsx or .xls, Comma separated value = .csv
# Install library
install.packages("readxl")
#Call library
library("readxl")
library("MASS")
#1.
#SET WORKING DIRECTORY TO THE FOLDER WHERE THE DATASET IS
setwd("D:/Dickinson College Teaching/DATA 180")
#1.
#SET WORKING DIRECTORY TO THE FOLDER WHERE THE DATASET IS
setwd("C:/Users/Peter/Documents/College Documents/DATA 180/Data 180 Peter Guma/DATA-180-PETER-GUMA")
read_excel("particulate data.xlsx") # Always keep in mind file extensions excel = .xlsx or .xls, Comma separated value = .csv
#2.
# READ DIRECTLY FROM THE FOLDER
p_data<-read_excel("D:/Dickinson College Teaching/DATA 180/particulate data.xlsx")
read_excel("particulate data.xlsx") # Always keep in mind file extensions excel = .xlsx or .xls, Comma separated value = .csv
#2.
# READ DIRECTLY FROM THE FOLDER
p_data<-read_excel("C:/Users/Peter/Documents/College Documents/DATA 180/Data 180 Peter Guma/DATA-180-PETER-GUMA/particulate data.xlsx")
#3. Read CSV
p_data_csv = read.csv("D:/Dickinson College Teaching/DATA 180/particulate data.csv")
#3. Read CSV
p_data_csv = read.csv("C:/Users/Peter/Documents/College Documents/DATA 180/Data 180 Peter Guma/DATA-180-PETER-GUMA/particulate data.csv")
my_data<-data.frame(
col_1 = c("A","B","C","D", "E"),
col_2 = c(1,2,3,4,5),
col_3 = c(1,12,3,4,5.4)
)
my_data
nrow(my_data)
# Create a vector of numbers
vec<-1:10
vec
stem(p_data$particulate_rounded_off)
stripchart(Cars93$MPG.city,method="stack",pch=16,cex.axis=1.2,cex.lab=1.2,xlab = "Miles per Gallon")
stripchart(Cars93$Length,method="stack",pch=16,cex.axis=1.2,cex.lab=1.2,xlab="Length (inches)")
#USING THE JITTER METHOD
stripchart(Cars93$MPG.city,method="jitter",pch=16,cex.axis=1.2,cex.lab=1.2,xlab="Miles Per Gallon (city)")
stripchart(Cars93$Length,method="jitter",pch=16,cex.axis=1.2,cex.lab=1.2,xlab="Length (inches)")
#HISTOGRAM
hist(p_data$particulate,cex.lab=1.2,cex.axis=1.2,col="lightgray",xlab="Particulate (g/gal)")
stripchart(Cars93$Length,method="jitter",pch=16,cex.axis=1.2,cex.lab=1.2,xlab="Length (inches)")
stripchart(Cars93$Length,method="jitter",pch=16,cex.axis=1.2,cex.lab=1.2,xlab="Length (inches)")
#HISTOGRAM
hist(p_data$particulate,cex.lab=1.2,cex.axis=1.2,col="lightgray",xlab="Particulate (g/gal)")
#Specifying how many classes you want and how wide you want each class to be
hist(p_data$particulate,cex.lab=1.2,cex.axis=1.2,col="lightgray",breaks=seq(0,7,.5),xlab="Particulate (g/gal)")
box()
#Letting the software choose for you the width of the classes
hist(Particulate,breaks=14,col="lightgray",xlab="Particulate (g/gal)",cex.lab=1.2,cex.axis=1.3)
#Letting the software choose for you the width of the classes
hist(Particulate,breaks=14,col="lightgray",xlab="Particulate (g/gal)",cex.lab=1.2,cex.axis=1.3)
